; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Sanctuary"
#define MyAppVersion "1.0"
#define MyAppPublisher "Warnet 2025"
#define MyAppURL "https://d2.pianka.io"
#define MyAppExeName "launcher.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{534934EF-2B3E-40F7-97DC-4CA0EA78B77B}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
OutputBaseFilename=Sanctuary
SetupIconFile=C:\Users\Rick Pianka\Code\flexlib\launcher\launcher\Resources\icon.ico
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Users\Rick Pianka\Code\flexlib\launcher\launcher\bin\Release\net9.0-windows\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\Rick Pianka\Code\flexlib\launcher\launcher\bin\Release\net9.0-windows\launcher.deps.json"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\Rick Pianka\Code\flexlib\launcher\launcher\bin\Release\net9.0-windows\launcher.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\Rick Pianka\Code\flexlib\launcher\launcher\bin\Release\net9.0-windows\launcher.runtimeconfig.json"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\Rick Pianka\Code\flexlib\launcher\launcher\bin\Release\net9.0-windows\Microsoft.WindowsAPICodePack.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\Rick Pianka\Code\flexlib\launcher\launcher\bin\Release\net9.0-windows\Microsoft.WindowsAPICodePack.Shell.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\Rick Pianka\Code\flexlib\launcher\launcher\bin\Release\net9.0-windows\settings.json"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{tmp}\dotnet-runtime-9.0.2-win-x64.exe"; Parameters: "/quiet /norestart"; \
    StatusMsg: "Installing .NET 9 Runtime..."; \
    Check: not IsDotNet9Installed
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent shellexec runasoriginaluser

[Code]
function IsDotNet9Installed(): Boolean;
begin
  // Check for .NET 9 desktop runtime (adjust key if it changes in release)
  Result := RegKeyExists(HKLM, 'SOFTWARE\dotnet\Setup\InstalledVersions\x64\sharedhost')
    and RegValueExists(HKLM, 'SOFTWARE\dotnet\Setup\InstalledVersions\x64\sharedhost', 'Version');
end;

[Files]
Source: "Dependencies\dotnet-runtime-9.0.2-win-x64.exe"; DestDir: "{tmp}"; Flags: deleteafterinstall

